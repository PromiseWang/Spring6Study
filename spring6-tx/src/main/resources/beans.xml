<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    &lt;!&ndash;引入外部属性文件, 创建数据源对象&ndash;&gt;-->
<!--    <context:property-placeholder location="classpath:jdbc.properties"/>-->
<!--    <bean class="com.alibaba.druid.pool.DruidDataSource" id="druidDataSource">-->
<!--        <property name="url" value="${jdbc.url}"/>-->
<!--        <property name="driverClassName" value="${jdbc.driver}"/>-->
<!--        <property name="username" value="${jdbc.user}"/>-->
<!--        <property name="password" value="${jdbc.password}"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash;创建jdbcTemplate对象, 注入数据源&ndash;&gt;-->
<!--    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">-->
<!--        <property name="dataSource" ref="druidDataSource"/>-->
<!--    </bean>-->


<!--    <context:component-scan base-package="org.example.tx"/>-->

<!--    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">-->
<!--        <property name="dataSource" ref="druidDataSource"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash;-->
<!--        开启事务的注解驱动-->
<!--        通过注解@Transactional所标识的方法或标识的类中所有的方法, 都会被事务管理器管理事务-->
<!--    &ndash;&gt;-->
<!--    &lt;!&ndash;transaction-manager属性值是transactionManager, 如果事务管理器bean的id正好是默认值, 可以省略这个属性&ndash;&gt;-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->
</beans>